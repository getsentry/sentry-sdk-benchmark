version: "3.9"
networks:
  default:
    internal: true # no access to host network / Internet
services:
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:v0.37.5"
    container_name: "cadvisor-{{ .RunName }}-{{ .ID }}"
    volumes:
    - "/:/rootfs:ro"
    - "/var/run/docker.sock:/var/run/docker.sock:rw"
    - "/sys:/sys:ro"
    - "/var/lib/docker/:/var/lib/docker:ro"
  loadgen:
    container_name: "loadgen-{{ .RunName }}-{{ .ID }}"
    build:
      context: "tool/loadgen"
      labels:
      - "io.sentry.sentry-sdk-benchmark"
    volumes:
    - "./result:/result:rw"
    command: [
      "-target", "http://app:8080/update?queries=10",
      "-cadvisor", "http://cadvisor:8080",
      {{ if .NeedsRelay -}}
      "-fakerelay", "http://relay:5000",
      {{- end }}
      "-containers", "app-{{ .RunName }}-{{ .ID }}",
      "-out", "/result/{{ .ResultPath }}",
    ]
    depends_on:
    - "app"
  tfb-database:
    container_name: "postgres-{{ .RunName }}-{{ .ID }}"
    build:
      context: "tool/database/postgres"
      dockerfile: "postgres.dockerfile"
      labels:
      - "io.sentry.sentry-sdk-benchmark"
  app:
    container_name: "app-{{ .RunName }}-{{ .ID }}"
    build:
      context: "{{ .App.ContextPath }}"
      dockerfile: "{{ .App.Dockerfile }}"
      labels:
      - "io.sentry.sentry-sdk-benchmark"
    depends_on:
    - "cadvisor"
    - "tfb-database"
{{- if .NeedsRelay }}
    - "relay"
    environment:
      SENTRY_DSN: "http://sentry@relay:5000/1"
  relay:
    container_name: "fakerelay-{{ .RunName }}-{{ .ID }}"
    build:
      context: "tool/fakerelay"
      labels:
      - "io.sentry.sentry-sdk-benchmark"
{{- end }}
